
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css" />
<link rel="stylesheet" href="~/wwwroot/css/library.css" />
<style>
	#map {
		height: 100vh;
	}
</style>

<!-- Wrapper -->
<div id="wrapper">
	<!-- Main -->
	<div id="main">
		<div class="inner">
			<!-- Header -->
			<header id="header">
				<a class="logo"><strong>Library</strong></a>
				<div class="main-cont">
					<div id="time-i">
						<h1>-</h1>
					</div>
					<div id="date-i">
						<h1>-</h1>
					</div>
					<div id="day-i">
						<h1>-</h1>
					</div>
				</div>
			</header>

			<!-- Content -->
			<div id="map"></div>
		</div>
	</div>

	<!-- Sidebar -->
	<div id="sidebar">
        <div class="inner">
            <!-- Home Back Button -->
            <a href="/Home">
                <div class="home-back-button">
                    <i class="fa fa-arrow-left  fa-fw" aria-hidden="true"></i>Back
                </div>
            </a>

            <!-- Menu -->
            <nav id="menu">
                <header class="major">
                    <h2>Menu</h2>
                </header>

                <ul>
                    <li>@Html.ActionLink("General", "Library", "Home")</li>
                    <li>

                        <span class="opener">Web Directory</span>
                        <ul>
                            <li>@Html.ActionLink("English", "EnglishD", "Home", null)</li>
                            <li>@Html.ActionLink("Math", "MathD", "Home", null)</li>
                            <li>@Html.ActionLink("Filipino", "FilipinoD", "Home", null)</li>
                            <li>@Html.ActionLink("Science", "ScienceD", "Home", null)</li>
                        </ul>
                    </li>
                    <li>
                        <span class="opener">Modules</span>
                        <ul>
                            <li>@Html.ActionLink("Kindergarten", "Kindergarten", "Home", null)</li>
                            <li>@Html.ActionLink("Elementary", "Elementary", "Home", null)</li>
                            <li>@Html.ActionLink("Junior High School", "Junior_high", "Home", null)</li>
                        </ul>
                    </li>
                    <li>
                        <span class="opener">Tables & Charts</span>
                        <ul>
                            <li>@Html.ActionLink("Flags", "Flags", "Home", null)</li>
                            <li>@Html.ActionLink("Numbers", "NumberChart", "Home", null)</li>
                            <li>@Html.ActionLink("Letters", "LetterChart", "Home", null)</li>
                            <li>@Html.ActionLink("Shapes", "Shapes", "Home", null)</li>
                            <li>@Html.ActionLink("Colors", "Color", "Home", null)</li>
                            <li>@Html.ActionLink("Body Parts", "BodyParts", "Home", null)</li>
                            <li>@Html.ActionLink("Multiplication Table", "MultiplicationTable", "Home", null)</li>
                        </ul>
                    </li>
                    <li>
                        <span class="opener">Maps</span>
                        <ul>
                            <li>@Html.ActionLink("World Map", "World", "Home", null)</li>
                            <li>@Html.ActionLink("Country Map", "Country", "Home", null)</li>
                            <li>@Html.ActionLink("Google Map", "Google", "Home", null)</li>
                        </ul>
                    </li>
                    <li>
                        <span class="opener">Videos</span>
                        <ul>
                            <li>@Html.ActionLink("Mini Youtube", "Youtube", "Home", null)</li>
                            <li>@Html.ActionLink("Chanel Recommendation", "Channels", "Home", null)</li>
                        </ul>
                    </li>
                    <li>
                        <span class="opener">eBooks</span>
                        <ul>
                            <li>@Html.ActionLink("Google Ebooks", "Ebook", "Home", null)</li>
                            <li>@Html.ActionLink("Ebooks Web Directory", "eBooksD", "Home", null)</li>
                        </ul>
                    </li>
                    <li>@Html.ActionLink("Trivia", "Trivia", "Home", null)</li>
                    <li>@Html.ActionLink("Dictionary", "Dictionary", "Home", null)</li>
                    <li>@Html.ActionLink("Study Tips", "StudyTips", "Home", null)</li>
                </ul>
            </nav>

            <!-- Section -->
            <!-- Footer -->
            <footer id="footer">
                <p class="copyright">&copy; Systematrics  All rights reserved.</a>.</p>
            </footer>
        </div>
	</div>
</div>

<!-- Library script -->
<script src="~/wwwroot/js/jquery.min.js"></script>
<script src="https://use.fontawesome.com/c0d25df00f.js"></script>
<script src="~/wwwroot/js/browser.min.js"></script>
<script src="~/wwwroot/js/breakpoints.min.js"></script>
<script src="~/wwwroot/js/util.js"></script>
<script src="~/wwwroot/js/library.js"></script>
<script src="https://unpkg.com/leaflet@1.0.3/dist/leaflet.js"></script>
<script>
	var data = fetch("https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json")
		.then((response) => {
			// console.log(response.json())
			return response.json();
		})
		.then((data) => {
			L.geoJson(data, {
				style: style,
				// onEachFeature: onEachFeature
			}).addTo(map);
		});

	var map = L.map("map");

	map.createPane("labels");

	// This pane is above markers but below popups
	map.getPane("labels").style.zIndex = 650;

	// Layers in this pane are non-interactive and do not obscure mouse/touch events
	map.getPane("labels").style.pointerEvents = "none";

	var cartodbAttribution =
		'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, &copy; <a href="http://cartodb.com/attributions">CartoDB</a>';

	var positron = L.tileLayer("http://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png", {
		// attribution: cartodbAttribution
	}).addTo(map);

	var positronLabels = L.tileLayer("http://{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}.png", {
		// attribution: cartodbAttribution,
		pane: "labels",
	}).addTo(map);

	// geojson = L.geoJson(euCountries).addTo(map);

	// geojson.eachLayer(function (layer) {
	//   layer.bindPopup(layer.feature.properties.name);
	// });

	map.setView({ lat: 13.144438869288887, lng: 122.70776759441449 }, 4);

	// get color depending on population density value
	function getColor(d) {
		return d > 1000
			? "#800026"
			: d > 500
				? "#BD0026"
				: d > 200
					? "#E31A1C"
					: d > 100
						? "#FC4E2A"
						: d > 50
							? "#FD8D3C"
							: d > 20
								? "#FEB24C"
								: d > 10
									? "#FED976"
									: "#FFEDA0";
	}

	function style(feature) {
		return {
			weight: 2,
			opacity: 1,
			color: "white",
			dashArray: "3",
			fillOpacity: 0.7,
			fillColor: getColor(Math.random() * 1000),
			// fillColor: getColor(feature.properties.density)
		};
	}
</script>